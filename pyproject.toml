[tool.poetry]
name = "duckql"
version = "0.1.0"
description = "GraphQL interface for DuckDB databases"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/yourusername/duckql"
keywords = ["graphql", "duckdb", "database", "analytics", "olap"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.8"
duckdb = "^1.0.0"
strawberry-graphql = {extras = ["fastapi"], version = "*"}
sqlglot = "^20.0.0"
fastapi = "^0.100.0"
uvicorn = {extras = ["standard"], version = "^0.23.0"}
click = "^8.0.0"

[tool.poetry.extras]
notebook = ["pandas", "nest-asyncio", "matplotlib"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.5.0"
pandas = "^2.0.0"
nest-asyncio = "^1.5.0"

[tool.poetry.scripts]
duckql = "duckql.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
line-length = 88
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"